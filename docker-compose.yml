services:
  spring-image:
    container_name: springboot-container
    env_file:
      - ./.env.dev.docker
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    depends_on:
      - mysql-image
    volumes:
      - /home/oscar/Desktop/LSR/album-app/pictures:/pictures
    networks:
      - springboot-network

  mysql-image:
    image: mysql:8
    container_name: mysql-container
    env_file:
      - ./.env.dev.docker
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: album_app
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - springboot-network

  react-image:
    container_name: react-container
    env_file:
      - ./.env.dev.docker
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/app
      - ./frontend/node_modules:/app/node_modules
    depends_on:
      - spring-image
    networks:
      - springboot-network
    stdin_open: true
    tty: true

networks:
  springboot-network:

volumes:
  mysql_data:
